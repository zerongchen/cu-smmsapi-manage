
/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

package com.aotain.smmsapi.task.client.cxf1;

import java.util.logging.Logger;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 2.7.12
 * 2015-07-14T11:09:19.603+08:00
 * Generated source version: 2.7.12
 * 
 */

@javax.jws.WebService(
                      serviceName = "IDCWebService",
                      portName = "IdcWebServicePort",
                      targetNamespace = "http://webservice.ismi.surfilter.com/",
                      wsdlLocation = "http://183.136.190.57:7080/ism/ws/commandack?wsdl",
                      endpointInterface = "com.aotain.smmsapi.task.client.cxf1.IdcWebService")
                      
public class IdcWebServiceImpl implements IdcWebService {

    private static final Logger LOG = Logger.getLogger(IdcWebServiceImpl.class.getName());

    /* (non-Javadoc)
     * @see com.aotain.smmsapi.task.client.cxf1.IdcWebService#idcCommandack(java.lang.String  idcId ,)java.lang.String  randVal ,)java.lang.String  pwdHash ,)java.lang.String  result ,)java.lang.String  resultHash ,)int  encryptAlgorithm ,)int  hashAlgorithm ,)int  compressionFormat ,)java.lang.String  commandVersion )*
     */
    public java.lang.String idcCommandack(java.lang.String idcId,java.lang.String randVal,java.lang.String pwdHash,java.lang.String result,java.lang.String resultHash,int encryptAlgorithm,int hashAlgorithm,int compressionFormat,java.lang.String commandVersion) { 
        LOG.info("Executing operation idcCommandack");
        System.out.println(idcId);
        System.out.println(randVal);
        System.out.println(pwdHash);
        System.out.println(result);
        System.out.println(resultHash);
        System.out.println(encryptAlgorithm);
        System.out.println(hashAlgorithm);
        System.out.println(compressionFormat);
        System.out.println(commandVersion);
        try {
            java.lang.String _return = "";
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

}
